todo (recent at top):


# TODO:
# WHERE I LEFT OFF: 
# I released it and have the goals on my local version
# but I need to figure out how to make resizing not be such
# a bitch. If I manually resize at any time, then the program
# seems to lose its ability to figure out the appropriate size
# This is okay for most of the program, as most windows shouldn't
# be resizable, but I need ViewLog to be resizable!!

WHERE I LEFT OFF:
just got add goals to properly work, got goals page to be the right size
Need to maybe do some more testing with goals and add goals?? maybe add some padding to most if not all frames?
I feel like I'm forgetting something
clear print statements
check todos written at top of files
release and start using???

FOR THE GOALS:
- create the goals page
- add goals button to main menu
- add goals to TimerApp's frames
- do some testing
- Release


ADD GOALS TO THE TIMER APP:
- Set a daily goal? x hours every day
- Add/delete/edit goals?
- View current progress of goals (time completed, time to go, etc.)
- View streaks? How many days have I hit my goal?
- Calculate how many hours or w/e will be done if I stick to this goal for x days

Not sure how this works but here's a reply from a redditor about how to 
implement multiple accounts and data syncing and whatnot: 
*********************************
It's not the choice of database that is decisive, although maybe MySQL might be a better choice. You're really describing something that needs a local application that connects to a remote database, probably through an API.

But how does it work where if someone else has this program, it accesses their own data? That's something I don't understand

You're describing a basic account based setup that you already use every day of your life for other things. Every user has an account, or login, and it saves their data to the central database, identified with their account, like any app on your phone or laptop or desktop that saves something remotely - twitter, instagram, facebook, dropbox, gmail the list goes on.

I don't know how your local app works, but it's great that it does so let's stick with that. To make it multi user you're going to have to do the following:

Build a web app that provides an API and a database with authentication. Django Rest API is ideal for this (and also python), but for sure not the only choice
Host it on any of the cloud services or hosting platforms. Many have free levels.
Update your app to have a login account, and use the API you built in step 1 so that it sends data to the central database for each user and pulls totals when you want to show them.
It's probably a lot more work than you expected, but that's basically how these things work.
***************************************
-trying to get sql server set up to access same data on different devices
-get python package thing so updating it and downloading it is streamlined





TEXT OF TOTALS SECTION TIME IS WRONG; WRONG FONT/SIZE

Change icon size. Seems sort of small??

not sure what makes this type of color good? sat? no idea
orange ellow: FFF29C
yellow: FEFF9C
green: #ACFF9C

****Get a border around data in View Log!!!*********

BUG: when you're in the timer entry (or any entry) and go to a different frame and type
that keyboard input is sent to the last active entry

- Add hover color to settings???

- Validation in Settings for time entered

** -Change pomo break noise back to ding

- Make "skip break" in pomo clickable when timer isn't running??

- Add ALL option to view log

- figure out proper frames -- includes all organization of program, shifting widgets

- properly sized buttons

- make scrollbar work when necessary, not work when not

- change fonts for entries

- organize/rearrange all clocks

- line up settings rows better

- enlarge clocks

- clean up total section in log

- remove print statements

- dynamic resizing

- maybe make settings a cog instead of a normal button with text

- change how buttons look when clicked (not necessary!)

- change pomo change pomo mode text/functionality (only skip break)

- organize stored settings module 

BUG: Double error message when timer input is invalid
BUG: when auto save is off, when the timer (and maybe pomo) ends, there is still 1 second on the clock when the prompt shows up
BUG: Should probably fix how shit the scrollbar is; scrolls when youre not in the log; scrolls when there's not enough data being displayed
	to warrant a scrollable frame

$$$$ make a quality executable


DESIGN ISSUE TO PONDER: the autocomplete search box only searches current tasks; delete tasks won't show up even though they still exist
	within the log






HAVENT PUSHED:
where i left off: making week and month display in displaydata work. Right now month doesn't display anything; bug with session dao ????
because week DOES work



(added 8-31)DISPLAY DATA: 
- Show totals of each task at top/bottom
- Maybe have a button to click to display the list of every session
	but otherwise just display the totals?

LOG FRAME IDEAS:

figure out calendar objects

choose a day, or past 7 days, or past 30 days
view all of a task (sorted by date)



Style all widgets
figure out how to display saved times

TODO AS OF 8-22-20:



UH OOH BIG BOO BOO IN TASKS.PY -> WHEN NO TASKS IN DB THERE IS AN ERROR


DATABASE FUNCTIONALITY
- Create session class
- Specify current activity/task
- Create the data access object (writes to and reads from database)


- Figure out more advanced color schemes

- Figure out how to make distributable .exe

!!! weird bug where sometimes the program doesn't really shut down all the way; cmd doesn't open up (this started after messing with configparser and settings being saved) !!!
above bug can be triggered by: -> change FG, change BG, open timer, close app (not 100% of the time??)
seems to happen on the first run of things???




- change settings button to have a cog instead of saying settings

- spacing for the buttons (the way the text changes shift the sizes and shit)

- bind enter key to add task

- continue looking for bugs in all three timers

- start on hooking up the database to the program

- make fancy charts and stuff ??
rs




- research if tkinter can have cool animations for timers instead of a basic digital clock

- create folder for sound effects
- download multiple sound effects to have options in settings

ToDo for DISPLAYDATA:

- figure out how resize when fullscreen
- column headers for data
- make the displayed data fit
- make spreadsheet-style grid for displaying the data.


ideas:

make todo app, connect to timer.
